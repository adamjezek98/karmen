version: "3.4"
services:
  frontend:
    image: fragaria/karmen-frontend:0
    environment:
      ENV: production
      BACKEND_BASE: http://${BASE_HOST}:8080
    ports:
      - 80:8080
  backend_flask:
    image: fragaria/karmen-backend:0
    network_mode: host
    environment:
      ENV: production
      SERVICE: flask
      FLASKR_SETTINGS: "${FLASKR_SETTINGS:-../config.local.cfg}"
    ports:
      - 8080:8080
    volumes:
      - ./config.local.cfg:/usr/src/app/config.local.cfg
      - /var/run/dbus:/var/run/dbus # for mdns resolution
    privileged: true # for mdns resolution
  backend_celery_worker:
    image: fragaria/karmen-backend:0
    network_mode: host # for arp discovery, requires a different config for redis/postgres conection
    environment:
      ENV: production
      SERVICE: celery-worker
      FLASKR_SETTINGS: "${FLASKR_SETTINGS:-../config.local.cfg}"
    volumes:
      - ./config.local.cfg:/usr/src/app/config.local.cfg
      - /var/run/dbus:/var/run/dbus # for mdns resolution
    privileged: true # for mdns resolution
  backend_celery_beat:
    image: fragaria/karmen-backend:0
    network_mode: host
    environment:
      ENV: production
      SERVICE: celery-beat
      FLASKR_SETTINGS: "${FLASKR_SETTINGS:-../config.local.cfg}"
    volumes:
      - ./config.local.cfg:/usr/src/app/config.local.cfg
    privileged: true # for mdns resolution
  redis:
    image: redis:5
    ports:
      - 127.0.0.1:6379:6379
  postgres:
    image: postgres:11
    restart: always
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: print3d
      POSTGRES_USER: print3d
      POSTGRES_DB: print3d
    ports:
      - 127.0.0.1:5433:5432
