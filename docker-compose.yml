# This is for development only! Do not run a production instance from this blueprint.
version: "3.4"
services:
  frontend:
    image: fragaria/karmen-frontend
    build:
      context: ./src/karmen_frontend
      args:
        - REACT_APP_GIT_REV
    environment:
      ENV: develop
      BACKEND_BASE: http://localhost:5000
    ports:
      - 127.0.0.1:3000:8080
    volumes:
      - ./src/karmen_frontend/src:/usr/src/app/src
      - ./src/karmen_frontend/public:/usr/src/app/public
  backend_flask:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      REDIS_HOST: redis
      ENV: develop
      SERVICE: flask
      FLASKR_SETTINGS: '../config.dev.cfg'
    ports:
      - 127.0.0.1:5000:8080
    volumes:
      - ./src/karmen_backend/server:/usr/src/app/server
      - ./tmp/karmen-files:/tmp/karmen-files
    networks:
      - default
      - printers
      - backend
    links:
      - postgres
      - redis
  fake_printer1:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      ENV: develop
      SERVICE: fake-printer
    networks:
      printers:
        ipv4_address: 172.16.236.11
  fake_printer2:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      ENV: develop
      SERVICE: fake-printer
    networks:
      printers:
        ipv4_address: 172.16.236.12
  backend_celery_worker:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      REDIS_HOST: redis
      ENV: develop
      SERVICE: celery-worker
      FLASKR_SETTINGS: '../config.dev.cfg'
    volumes:
      - ./src/karmen_backend/server:/usr/src/app/server
    networks:
      - default
      - backend
      - printers
    links:
      - postgres
      - redis
  backend_celery_beat:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      REDIS_HOST: redis
      ENV: develop
      SERVICE: celery-beat
      FLASKR_SETTINGS: '../config.dev.cfg'
    volumes:
      - ./src/karmen_backend/server:/usr/src/app/server
    networks:
      - backend
    links:
      - redis
  redis:
    image: redis:5
    networks:
      - backend
  postgres:
    image: postgres:11
    restart: always
    volumes:
      - ./tmp/db-data:/var/lib/postgresql/data
      - ./src/karmen_backend/db/schema.sql:/docker-entrypoint-initdb.d/10-init.sql
      - ./src/karmen_backend/db/fake-printers.sql:/docker-entrypoint-initdb.d/20-fake-printers.sql
    environment:
      POSTGRES_PASSWORD: print3d
      POSTGRES_USER: print3d
      POSTGRES_DB: print3d
    ports:
      - 127.0.0.1:5433:5432
    networks:
      - default
      - backend
networks:
  backend:
    ipam:
      config:
      - subnet: 172.16.235.0/24
  printers:
    ipam:
      config:
      - subnet: 172.16.236.0/24
