# This is for development only! Do not run a production instance from this blueprint.
version: "3.4"
services:
  proxy:
    image: fragaria/karmen-proxy
    build: ./src/proxy
    ports:
      - 127.0.0.1:4000:9766
    environment:
      REDIS_HOST: redis
    networks:
      - backend
      - default
    depends_on:
      - frontend
      - backend_flask
  frontend:
    image: fragaria/karmen-frontend
    build: ./src/karmen_frontend
    environment:
      ENV: develop
    ports:
      - 127.0.0.1:3000:9765
    volumes:
      - ./src/karmen_frontend/src:/usr/src/app/src
      - ./src/karmen_frontend/public:/usr/src/app/public
    networks:
      - default
  backend_flask:
    image: fragaria/karmen-backend
    user: www-data
    build: ./src/karmen_backend
    environment:
      REDIS_HOST: redis
      ENV: develop
      SERVICE: flask
      FLASKR_SETTINGS: '../config.dev.cfg'
      PROXY_WEBCAM_BASE: 'http://localhost:4000/proxied-webcam/'
    ports:
      - 127.0.0.1:5000:9764
    volumes:
      - ./src/karmen_backend/server:/usr/src/app/server
      - ./tmp/karmen-files:/tmp/karmen-files
    networks:
      - default
      - printers
      - backend
    depends_on:
      - files
      - dbmigrations
    links:
      - postgres
      - redis
  files:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    user: root
    command: bash -c 'chown -R www-data:www-data /tmp/karmen-files && chmod -R g+sw /tmp/karmen-files'
    volumes:
      - ./tmp/karmen-files:/tmp/karmen-files
  dbfiles:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    user: root
    command: bash -c 'chown -R 1000:1000 /var/lib/postgresql/data && chmod -R g+sw /var/lib/postgresql/data'
    volumes:
      - ./tmp/db-data:/var/lib/postgresql/data
  dbmigrations:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    command: scripts/migrate.sh
    environment:
      ENV: develop
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    depends_on:
      - postgres
    networks:
      - default
    links:
      - postgres
  fake_printer1:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      ENV: develop
      SERVICE: fake-printer
      SERVICE_PORT: 8080
    networks:
      printers:
        ipv4_address: 172.16.236.11
  fake_printer2:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      ENV: develop
      SERVICE: fake-printer
      SERVICE_PORT: 8080
    networks:
      printers:
        ipv4_address: 172.16.236.12
  backend_celery_worker:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      REDIS_HOST: redis
      ENV: develop
      SERVICE: celery-worker
      FLASKR_SETTINGS: '../config.dev.cfg'
    volumes:
      - ./src/karmen_backend/server:/usr/src/app/server
      - ./tmp/karmen-files:/tmp/karmen-files
    networks:
      - default
      - backend
      - printers
    links:
      - postgres
      - redis
  backend_celery_beat:
    image: fragaria/karmen-backend
    build: ./src/karmen_backend
    environment:
      REDIS_HOST: redis
      ENV: develop
      SERVICE: celery-beat
      FLASKR_SETTINGS: '../config.dev.cfg'
    volumes:
      - ./src/karmen_backend/server:/usr/src/app/server
    networks:
      - backend
    links:
      - redis
  redis:
    image: redis:5
    networks:
      - backend
  postgres:
    image: postgres:11
    user: '1000:1000'
    restart: unless-stopped
    volumes:
      - ./tmp/db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: print3d
      POSTGRES_USER: print3d
      POSTGRES_DB: print3d
    depends_on:
      - dbfiles
    ports:
      - 127.0.0.1:5433:5432
    networks:
      - default
      - backend
networks:
  backend:
    ipam:
      config:
      - subnet: 172.16.235.0/24
  printers:
    ipam:
      config:
      - subnet: 172.16.236.0/24
