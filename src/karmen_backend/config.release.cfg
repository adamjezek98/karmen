import os

# Which network should the backend scan? You can use `ifconfig` or a similar tool to list available network interfaces
NETWORK_INTERFACE = "wlan0" 

# How big should the timeout for communication with the printers be
NETWORK_TIMEOUT = 10

# Should the networking stack ignore invalid certificates? It is a bad idea to turn off the verification, but
# since octoprint is typically exposed with a self-signed certificate (OctoPi is doing that), there is no other way apart from 
# issuing a trusted certificate for the OctoPi machine itself.
NETWORK_VERIFY_CERTIFICATES = True

# Change this to something unique to improve security of the backend
SECRET_KEY = "random-secret-to-be-changed!"

# Connection string to postgres. Keep this if running from docker-compose. Otherwise pick a unique password.
DB_DSN = "host='localhost' port=5433 dbname='print3d' user='print3d' password='print3d'"

# Directory where all uploaded files will be stored. This path is INSIDE the container, it shouldn't be /tmp on the host.
UPLOAD_FOLDER = "/tmp/karmen-files"

# Redis instance used for proxying webcams through nginx. Keep this if running from docker-compose.
REDIS_HOST = os.getenv('REDIS_HOST', 'localhost')
REDIS_PORT = os.getenv('REDIS_PORT', 6379)
WEBCAM_PROXY_CACHE_HOST = os.getenv('REDIS_HOST', 'localhost')
WEBCAM_PROXY_CACHE_PORT = os.getenv('REDIS_PORT', 6379)

# Connection string to redis. Keep this if running from docker-compose.
CELERY_BROKER_URL = "redis://%s:%s" % (os.getenv('REDIS_HOST', 'localhost'), os.getenv('REDIS_PORT', 6379))

# Connection string to redis. Keep this if running from docker-compose.
CELERY_RESULT_BACKEND = "redis://%s:%s" % (os.getenv('REDIS_HOST', 'localhost'), os.getenv('REDIS_PORT', 6379))

# Celery schedule.
# The discover_printers service shall be turned off by changing NETWORK_DISCOVERY to false.
# The check_printers service should be kept running at all times
CELERY_CONFIG = {
  "timezone": "Europe/Prague",
  "beat_schedule": {
      "check_printers": {
          "task": "check_printers",
          "schedule": 30.0,
      },
  }
}
