from django.db import models
from django.conf import settings
from karmen.utils import gen_short_uid


def split_id(value):
    return '%s-%s-%s' % (value[:2], value[2:5], value[5:])

def join_id(value):
    return value.replace('-', '')


class IdField(models.CharField):
    
    description = 'Primary key field with autogenerated random string'

    MAX_LENGTH = settings.ID_FIELD_LENGTH

    def __init__(self, *args, **kwargs):
        if not len(args):
            args = ('ID',)
        if 'max_length' not in kwargs:
            kwargs['max_length'] = self.MAX_LENGTH
        if 'primary_key' not in kwargs:
            kwargs['primary_key'] = True
        kwargs['default'] = gen_short_uid
        super().__init__(*args, **kwargs)

    def deconstruct(self):
        '''
        Delete default arguments and keyword arguments when serializing the
        field for migrations.
        '''
        name, path, args, kwargs = super().deconstruct()
        del kwargs["default"]
        if kwargs['max_length'] == self.MAX_LENGTH:
            del kwargs['max_length']
        if kwargs['primary_key'] == True:
            del kwargs['primary_key']
        if len(args) == 1 and args[0] == 'ID':
            args = tuple()
        if 'verbose_name' in kwargs:
            del kwargs['verbose_name']

        return name, path, args, kwargs

    def from_db_value(self, value, expression, connection):
        # value = super().from_db_value(value, expression, connection)
        return split_id(value)

    def to_python(self, value):
        value = join_id(value)
        return super().to_python(value)
